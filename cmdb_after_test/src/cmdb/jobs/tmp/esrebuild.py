# -*- coding: utf-8 -*-'''此job用于每日重新build elasticsearch中的数据库，专门用于搜索ip'''from application import app, dbfrom models.host import Hostfrom models.device import Devicefrom elasticsearch import Elasticsearchimport timeclass EsRebuild:    def run(self):        print "==========start=========="        self.build()        self.build2()        print "===========end=========="    def build(self):        es = Elasticsearch(host=app.config.get("ES_HOST"), port=app.config.get("ES_PORT"))        hostinfo=Host.query.all()        if hostinfo:                for host in hostinfo:                    host_id = host.id                    es_id=0                    res = es.search(index="cmdb_index_unoin",doc_type="device_host",                    body={'query': {                               "match" : { "host_id": host_id }                          }                    },params={'size':1})                    if res['hits']['hits']:                        es_id = res['hits']['hits'][0]['_id']                    if es_id == 0:                        es_id = int(time.time()*1000)                    device_id = host.device_id                    ip=""                    sql="select b.ipv4 from host_ip as a,ip_address as b where a.ip_address_id = b.id and a.host_id=%d  "%host_id                    ipsinfo=db.engine.execute(sql).fetchall()                    if ipsinfo:                        for item in ipsinfo:                            ip=ip+" %s"%item.ipv4                    if device_id:                        sql="select b.ipv4 from device_ip as a,ip_address as b where a.ip_address_id = b.id and a.device_id=%d  "%device_id                        ipsinfo=db.engine.execute(sql).fetchall()                    if ipsinfo:                        for item in ipsinfo:                            ip=ip+" %s"%item.ipv4                    doc={                        "host_id":host_id,                        "ip":ip,                        "device_id":device_id                    }                    es.index(index="cmdb_index_unoin",doc_type="device_host",id=es_id,body=doc)        print "over"    def build2(self):        es = Elasticsearch(host=app.config.get("ES_HOST"), port=app.config.get("ES_PORT"))        deviceinfo = Device.query.filter(Device.device_cat_id != 1).all()        if deviceinfo:            for device in deviceinfo:                device_id = device.id                es_id=0                res = es.search(index="cmdb_index_unoin",doc_type="device_host",                    body={'query': {                               "match" : { "device_id": device_id }                          }                    },params={'size':1})                if res['hits']['hits']:                    es_id = res['hits']['hits'][0]['_id']                if es_id == 0:                    es_id = int(time.time()*1000)                ip=""                sql = "select b.ipv4 from device_ip as a,ip_address as b where a.device_id=%d  and a.ip_address_id = b.id" %device_id                ipsinfo=db.engine.execute(sql).fetchall()                if ipsinfo:                    for item in ipsinfo:                        ip=ip+" %s"%item.ipv4                doc={                    "host_id":0,                    "ip":ip,                    "device_id":device_id                }                es.index(index="cmdb_index_unoin",doc_type="device_host",id=es_id,body=doc)